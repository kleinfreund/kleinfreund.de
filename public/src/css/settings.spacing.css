/*
Fluid Spacing

… uses a viewport-relative length unit (e.g. vw or vh) in order to scale with
the devices’ display size.

Using media queries, a minimum and maximum value for the spacing property is
set. In between these boundaries, the spacing scales with increasing viewport
width. This technique is called CSS locks

More details are covered in:
“The math of CSS locks” by Florens Verschelde, https://fvsch.com/code/css-locks

This might get implemented in CSS Values 4 as discussed in an issue in the
CSS Working Group Drafts repository: https://github.com/w3c/csswg-drafts/issues/544
*/

/*
Minimum spacing

The spacing value will never be smaller than this.
*/
:root {
  --spacing: 16px;
}

/*
General spacing

It’s important to use minimum and maximum spacing values that are not relative
to the viewport to avoid extremely small or extremely large spacing values.

The combination of absolut values and a relative value determines the
threshold at which the relative value reaches its minimum or maximum.

Ideally, one would use `calc` within the media feature to dynamically determine
the threshold like this:

min-width: calc(16px * 100vw / 3vw)

(16px being the minimum value.)
*/
@media only screen and (min-width: 534px) {
  :root {
    --spacing: 3vw;
  }
}

/*
Maximum spacing

min-width: calc(60px * 100vw / 3vw)
*/
@media only screen and (min-width: 2000px) {
  :root {
    --spacing: 60px;
  }
}
