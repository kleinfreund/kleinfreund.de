<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jekyll on kleinfreund.de</title>
    <link>https://kleinfreund.de/tags/jekyll/index.xml</link>
    <description>Recent content in Jekyll on kleinfreund.de</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://kleinfreund.de/tags/jekyll/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Spring is coming</title>
      <link>https://kleinfreund.de/spring-is-coming</link>
      <pubDate>Tue, 24 Feb 2015 13:00:04 +0000</pubDate>
      
      <guid>https://kleinfreund.de/spring-is-coming</guid>
      <description>

&lt;p&gt;It’s time again. Not only is spring at the door but also a new year for the blog. The first entry was posted on 1st February 2014. Today is not the 1st February? You are completely right about that. Don’t worry about that. In the last couple of days I’ve been tightening and loosening some screws.&lt;/p&gt;

&lt;h3 id=&#34;subdomain-for-better-performance&#34;&gt;Subdomain for Better Performance&lt;/h3&gt;

&lt;p&gt;The most important change is the move to a subdomain. Look at it, it reads &lt;strong&gt;hey.kleinfreund.de&lt;/strong&gt; up there now. This has pragmatic reasons. If one points the root domain to the GitHub Pages IP via A Record it gets redirected. This is part of a DDoS mitigation strategy the girls and boys run over there (Anselm Hannemann &lt;a href=&#34;https://helloanselm.com/2014/github-pages-redirect-performance/&#34;&gt;wrote this down&lt;/a&gt; last year).&lt;/p&gt;

&lt;p&gt;The redirect took 3–5 seconds for me and that’s way too long. Heavy-heartedly I was about to setup the typical www. subdomain until it crossed my mind that one can choose freely. Anatol Broder chose &lt;a href=&#34;http://anatol.penibelst.de/&#34;&gt;anatol.penibelst.de&lt;/a&gt; for example.&lt;/p&gt;

&lt;h3 id=&#34;critical-css&#34;&gt;Critical CSS&lt;/h3&gt;

&lt;p&gt;Currently, I’m experimenting with inlining my full stylesheet. It’s 7.3 KB big. With that I cut out the extra HTTP request and don’t block rendering with an external stylesheet. In return, the ressource is not cachable anymore, because the stylesheet is now part of the HTML document.&lt;/p&gt;

&lt;p&gt;With this change, my build time went up by 6–7 seconds. That’s due to the &lt;code&gt;sassify&lt;/code&gt; and &lt;code&gt;scssify&lt;/code&gt; filters not utilizing the Sass cache. Locally, I can work around this with &lt;a href=&#34;https://talk.jekyllrb.com/t/is-capture-slow-or-are-my-build-times-normal/32/4&#34;&gt;a tip&lt;/a&gt; from envygeeks posted over at the new Jekyll forums.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{% if jekyll.environment == &#39;local&#39; %}
  &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/css/kleinfreund.css&amp;quot;&amp;gt;
{% else %}
  &amp;lt;style&amp;gt;
    {% capture scss_include %}
      {% include kleinfreund.scss %}
    {% endcapture %}

    {{ scss_include | scssify }}
  &amp;lt;/style&amp;gt;
{% endif %}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;under-the-hood&#34;&gt;Under the Hood&lt;/h3&gt;

&lt;p&gt;Until now there were a couple of pages which basically were the same with the only difference being language-specific strings. That was me being lazy, not creating a layout and the needed strings in the locales.yml for that purpose. I cought up on this.&lt;/p&gt;

&lt;p&gt;In addition, I wrote an article about moving the website of my parents from Wordpress to Jekyll. However, it eventually got lost after the partition with Windows on it died. Right now I work on the remaining 50 GB which has Ubuntu on it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jekyll: Multilingual</title>
      <link>https://kleinfreund.de/jekyll-multilingual</link>
      <pubDate>Sat, 09 Aug 2014 06:50:37 +0000</pubDate>
      
      <guid>https://kleinfreund.de/jekyll-multilingual</guid>
      <description>

&lt;p&gt;One of the big ups of Jekyll is the luxutry of being able to work with GitHub Pages. Building a multilingual site is a bit harder, though. Using plugins is except for &lt;a href=&#34;https://help.github.com/articles/using-jekyll-plugins-with-github-pages&#34;&gt;a view exceptions&lt;/a&gt; not possible.&lt;/p&gt;

&lt;p&gt;My site is bilingual—German and English—whereas German is my main language. To do this I need an adjusted directory structure, categories and front matter defaults.&lt;/p&gt;

&lt;h3 id=&#34;directory-structure&#34;&gt;Directory Structure&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;.
├── _posts
|   └── 2014-08-09-jekyll-mehrsprachig.md
├── en
|   ├── _posts
|   |   └── 2014-08-09-jekyll-multilingual.md
|   ├── profile.md
|   └── index.html
├── profil.md
└── index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For the main language, I use Jekyll as usual. The regular &lt;code&gt;_posts&lt;/code&gt;-directory for posts and pages in the project directory. Translations are housed in the corresponding subdirectory (e.g. &lt;code&gt;/en&lt;/code&gt; for English).&lt;/p&gt;

&lt;h3 id=&#34;permalinks&#34;&gt;Permalinks&lt;/h3&gt;

&lt;p&gt;Because titles can duplicate across languages, we need permalinks which distinct from one another. It’ll work without for titles like “Jekyll: Mehrsprachig” and “Jekyll: Multilingual”, but we get a conflict for “Soundtracks”.&lt;/p&gt;

&lt;p&gt;If we take a look &lt;a href=&#34;https://jekyllrb.com/docs/permalinks/#template-variables&#34;&gt;at the docs&lt;/a&gt; for permalinks, we don’t see too many possibilities. One could use the language slug in the title, but that’s silly and inconvenient.&lt;/p&gt;

&lt;p&gt;We use categories. That’s not too sound as well, but it works. Actually, we already created the category &lt;code&gt;en&lt;/code&gt; with out directory structure.&lt;/p&gt;

&lt;h4 id=&#34;config-yml&#34;&gt;_config.yml:&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;permalink: /:categories/:year/:month/:title
&lt;/code&gt;&lt;/pre&gt;

&lt;p class=&#34;block-note&#34;&gt;With the exception of &lt;code&gt;permalink: pretty&lt;/code&gt; these settings apply to posts only. Permalinks need to be explicitly set for pages.&lt;/p&gt;

&lt;h3 id=&#34;set-the-language&#34;&gt;Set the Language&lt;/h3&gt;

&lt;p&gt;To distinct between German and English documents, we don’t need to alienate categories again. We only needed that for the permalinks. For posts and pages we set the language with &lt;code&gt;lang: [de|en]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And with front matter defaults we don’t even need to do this for each document over and over. Nice!&lt;/p&gt;

&lt;h4 id=&#34;config-yml-1&#34;&gt;_config.yml:&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;defaults:
  # Default language
  -
    scope:
      path: &amp;quot;&amp;quot;
    values:
      lang: &amp;quot;de&amp;quot;
  # Language for everything inside `/en`
  -
    scope:
      path: &amp;quot;en&amp;quot;
    values:
      lang: &amp;quot;en&amp;quot;
  # Language for English posts
  -
    scope:
      path: &amp;quot;en/_posts&amp;quot;
      type: &amp;quot;posts&amp;quot; # As of version 2.3.0, Jekyll uses plural keywords for type
    values:
      lang: &amp;quot;en&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;the-blog-thing&#34;&gt;The Blog Thing&lt;/h3&gt;

&lt;p&gt;Creating a paginated blog with Jekyll is super easy. However this has its limitations. For example one isn’t able to filter the posts &lt;code&gt;paginator.posts&lt;/code&gt; is returning. That means I can’t just take all posts with &lt;code&gt;lang: en&lt;/code&gt; and make a blog with pagination.&lt;/p&gt;

&lt;p&gt;Because I&lt;/p&gt;

&lt;p&gt;Da ich kompromissfreudig bin, hab ich dieses Vorhaben gestrichen. Stattdessen nehm ich mir jetzt die ersten 10 Beiträge und verlinke dann auf’s Archiv.&lt;/p&gt;

&lt;h4 id=&#34;config-yml-2&#34;&gt;_config.yml:&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;max_posts: 10
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;index-html&#34;&gt;index.html:&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-liquid&#34;&gt;{% assign posts_de = site.posts | where: &amp;quot;lang&amp;quot;, &amp;quot;de&amp;quot; %}

{% for post in posts_de limit:site.max_posts %}
&amp;lt;!-- Beiträge 1–10 --&amp;gt;
{% endfor %}

{% if posts_de.size &amp;gt; site.max_posts %}
&amp;lt;!-- Archivlink, bei mehr als 10 Beiträgen --&amp;gt;
{% endif %}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Das war’s im Grunde. Zum besseren Verständnis könnt ihr euch das &lt;a href=&#34;http://github.com/kleinfreund/kleinfreund.de&#34;&gt;GitHub Repository&lt;/a&gt; meiner Seite ansehen und durch die Dateien klicken.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>